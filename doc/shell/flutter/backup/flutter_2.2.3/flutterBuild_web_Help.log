Build a web application bundle.

Global options:
-h, --help                  Print this usage information.
-v, --verbose               Noisy logging, including all shell commands executed.
                            If used with "--help", shows hidden options. If used with "flutter doctor", shows additional diagnostic information. (Use "-vv" to force verbose logging in those cases.)
-d, --device-id             Target device id or name (prefixes allowed).
    --version               Reports the version of this tool.
    --suppress-analytics    Suppress analytics reporting when this command runs.

Usage: flutter build web [arguments]
-h, --help                             Print this usage information.
    --[no-]tree-shake-icons            Tree shake icon fonts so that only glyphs used by the application remain.
-t, --target=<path>                    The main entry-point file of the application, as run on the device.
                                       If the "--target" option is omitted, but a file name is provided on the command line, then that is used instead.
                                       (defaults to "lib/main.dart")
    --[no-]pub                         Whether to run "flutter pub get" before executing this command.
                                       (defaults to on)
    --profile                          Build a version of your app specialized for performance profiling.
    --release                          Build a release version of your app (default mode).
    --dart-define=<foo=bar>            Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.
                                       Multiple defines can be passed by repeating "--dart-define" multiple times.
    --web-renderer                     The renderer implementation to use when building for the web.

          [auto] (default)             Use the HTML renderer on mobile devices, and CanvasKit on desktop devices.
          [canvaskit]                  Always use the CanvasKit renderer. This renderer uses WebGL and WebAssembly to render graphics.
          [html]                       Always use the HTML renderer. This renderer uses a combination of HTML, CSS, SVG, 2D Canvas, and WebGL. This is the default.

    --[no-]null-assertions             Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices.
    --[no-]native-null-assertions      Enables additional runtime null checks in web applications to ensure the correct nullability of native (such as in dart:html) and external (such as with JS interop) types. This is enabled by default but only takes effect in sound mode. To report an issue with a null assertion failure in dart:html or the other dart web libraries, please file a bug at: https://github.com/dart-lang/sdk/issues/labels/web-libraries
                                       (defaults to on)
    --csp                              Disable dynamic generation of code in the generated output. This is necessary to satisfy CSP restrictions (see http://www.w3.org/TR/CSP/).
    --[no-]source-maps                 Generate a sourcemap file. These can be used by browsers to view and debug the original source code of a compiled and minified Dart application.
    --pwa-strategy                     The caching strategy to be used by the PWA service worker.

          [none]                       Generate a service worker with no body. This is useful for local testing or in cases where the service worker caching functionality is not desirable
          [offline-first] (default)    Attempt to cache the application shell eagerly and then lazily cache all subsequent assets as they are loaded. When making a network request for an asset, the offline cache will be preferred.

Run "flutter help" to see global options.
